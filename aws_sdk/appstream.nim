# This file is autogenerated, do not modify
import packedjson, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2016-12-01"
const awsApiMD_endpointPrefix* = "appstream2"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceFullName* = "Amazon AppStream"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_signingName* = "appstream"
const awsApiMD_targetPrefix* = "PhotonAdminProxyService"
const awsApiMD_uid* = "appstream-2016-12-01"
defineClient(AppStream)
proc associateFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AssociateFleet", "POST", "/", r)
proc createDirectoryConfig*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateDirectoryConfig", "POST", "/", r)
proc createFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateFleet", "POST", "/", r)
proc createImageBuilder*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateImageBuilder", "POST", "/", r)
proc createImageBuilderStreamingURL*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateImageBuilderStreamingURL", "POST", "/", r)
proc createStack*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateStack", "POST", "/", r)
proc createStreamingURL*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateStreamingURL", "POST", "/", r)
proc deleteDirectoryConfig*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteDirectoryConfig", "POST", "/", r)
proc deleteFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteFleet", "POST", "/", r)
proc deleteImage*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteImage", "POST", "/", r)
proc deleteImageBuilder*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteImageBuilder", "POST", "/", r)
proc deleteStack*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteStack", "POST", "/", r)
proc describeDirectoryConfigs*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeDirectoryConfigs", "POST", "/", r)
proc describeFleets*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeFleets", "POST", "/", r)
proc describeImageBuilders*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeImageBuilders", "POST", "/", r)
proc describeImages*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeImages", "POST", "/", r)
proc describeSessions*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeSessions", "POST", "/", r)
proc describeStacks*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeStacks", "POST", "/", r)
proc disassociateFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DisassociateFleet", "POST", "/", r)
proc expireSession*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ExpireSession", "POST", "/", r)
proc listAssociatedFleets*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListAssociatedFleets", "POST", "/", r)
proc listAssociatedStacks*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListAssociatedStacks", "POST", "/", r)
proc startFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartFleet", "POST", "/", r)
proc startImageBuilder*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartImageBuilder", "POST", "/", r)
proc stopFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StopFleet", "POST", "/", r)
proc stopImageBuilder*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StopImageBuilder", "POST", "/", r)
proc updateDirectoryConfig*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateDirectoryConfig", "POST", "/", r)
proc updateFleet*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateFleet", "POST", "/", r)
proc updateStack*(cl: AppStream, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateStack", "POST", "/", r)
