# This file is autogenerated, do not modify
import json, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2015-08-24"
const awsApiMD_endpointPrefix* = "waf"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceAbbreviation* = "WAF"
const awsApiMD_serviceFullName* = "AWS WAF"
const awsApiMD_serviceId* = "WAF"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "AWSWAF_20150824"
const awsApiMD_uid* = "waf-2015-08-24"
defineClient(WAF)
proc createByteMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateByteMatchSet", "POST", "/", r)
proc createGeoMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateGeoMatchSet", "POST", "/", r)
proc createIPSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateIPSet", "POST", "/", r)
proc createRateBasedRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateRateBasedRule", "POST", "/", r)
proc createRegexMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateRegexMatchSet", "POST", "/", r)
proc createRegexPatternSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateRegexPatternSet", "POST", "/", r)
proc createRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateRule", "POST", "/", r)
proc createRuleGroup*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateRuleGroup", "POST", "/", r)
proc createSizeConstraintSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateSizeConstraintSet", "POST", "/", r)
proc createSqlInjectionMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateSqlInjectionMatchSet", "POST", "/", r)
proc createWebACL*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateWebACL", "POST", "/", r)
proc createXssMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateXssMatchSet", "POST", "/", r)
proc deleteByteMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteByteMatchSet", "POST", "/", r)
proc deleteGeoMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteGeoMatchSet", "POST", "/", r)
proc deleteIPSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteIPSet", "POST", "/", r)
proc deleteRateBasedRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRateBasedRule", "POST", "/", r)
proc deleteRegexMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRegexMatchSet", "POST", "/", r)
proc deleteRegexPatternSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRegexPatternSet", "POST", "/", r)
proc deleteRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRule", "POST", "/", r)
proc deleteRuleGroup*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRuleGroup", "POST", "/", r)
proc deleteSizeConstraintSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteSizeConstraintSet", "POST", "/", r)
proc deleteSqlInjectionMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteSqlInjectionMatchSet", "POST", "/", r)
proc deleteWebACL*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteWebACL", "POST", "/", r)
proc deleteXssMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteXssMatchSet", "POST", "/", r)
proc getByteMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetByteMatchSet", "POST", "/", r)
proc getChangeToken*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetChangeToken", "POST", "/", r)
proc getChangeTokenStatus*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetChangeTokenStatus", "POST", "/", r)
proc getGeoMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetGeoMatchSet", "POST", "/", r)
proc getIPSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetIPSet", "POST", "/", r)
proc getRateBasedRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRateBasedRule", "POST", "/", r)
proc getRateBasedRuleManagedKeys*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRateBasedRuleManagedKeys", "POST", "/", r)
proc getRegexMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRegexMatchSet", "POST", "/", r)
proc getRegexPatternSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRegexPatternSet", "POST", "/", r)
proc getRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRule", "POST", "/", r)
proc getRuleGroup*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetRuleGroup", "POST", "/", r)
proc getSampledRequests*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetSampledRequests", "POST", "/", r)
proc getSizeConstraintSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetSizeConstraintSet", "POST", "/", r)
proc getSqlInjectionMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetSqlInjectionMatchSet", "POST", "/", r)
proc getWebACL*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetWebACL", "POST", "/", r)
proc getXssMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetXssMatchSet", "POST", "/", r)
proc listActivatedRulesInRuleGroup*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListActivatedRulesInRuleGroup", "POST", "/", r)
proc listByteMatchSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListByteMatchSets", "POST", "/", r)
proc listGeoMatchSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListGeoMatchSets", "POST", "/", r)
proc listIPSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListIPSets", "POST", "/", r)
proc listRateBasedRules*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListRateBasedRules", "POST", "/", r)
proc listRegexMatchSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListRegexMatchSets", "POST", "/", r)
proc listRegexPatternSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListRegexPatternSets", "POST", "/", r)
proc listRuleGroups*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListRuleGroups", "POST", "/", r)
proc listRules*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListRules", "POST", "/", r)
proc listSizeConstraintSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListSizeConstraintSets", "POST", "/", r)
proc listSqlInjectionMatchSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListSqlInjectionMatchSets", "POST", "/", r)
proc listSubscribedRuleGroups*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListSubscribedRuleGroups", "POST", "/", r)
proc listWebACLs*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListWebACLs", "POST", "/", r)
proc listXssMatchSets*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListXssMatchSets", "POST", "/", r)
proc updateByteMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateByteMatchSet", "POST", "/", r)
proc updateGeoMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateGeoMatchSet", "POST", "/", r)
proc updateIPSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateIPSet", "POST", "/", r)
proc updateRateBasedRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRateBasedRule", "POST", "/", r)
proc updateRegexMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRegexMatchSet", "POST", "/", r)
proc updateRegexPatternSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRegexPatternSet", "POST", "/", r)
proc updateRule*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRule", "POST", "/", r)
proc updateRuleGroup*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRuleGroup", "POST", "/", r)
proc updateSizeConstraintSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateSizeConstraintSet", "POST", "/", r)
proc updateSqlInjectionMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateSqlInjectionMatchSet", "POST", "/", r)
proc updateWebACL*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateWebACL", "POST", "/", r)
proc updateXssMatchSet*(cl: WAF, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateXssMatchSet", "POST", "/", r)
