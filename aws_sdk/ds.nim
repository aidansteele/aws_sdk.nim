# This file is autogenerated, do not modify
import packedjson, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2015-04-16"
const awsApiMD_endpointPrefix* = "ds"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceAbbreviation* = "Directory Service"
const awsApiMD_serviceFullName* = "AWS Directory Service"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "DirectoryService_20150416"
const awsApiMD_uid* = "ds-2015-04-16"
defineClient(DS)
proc addIpRoutes*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AddIpRoutes", "POST", "/", r)
proc addTagsToResource*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AddTagsToResource", "POST", "/", r)
proc cancelSchemaExtension*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CancelSchemaExtension", "POST", "/", r)
proc connectDirectory*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ConnectDirectory", "POST", "/", r)
proc createAlias*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateAlias", "POST", "/", r)
proc createComputer*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateComputer", "POST", "/", r)
proc createConditionalForwarder*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateConditionalForwarder", "POST", "/", r)
proc createDirectory*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateDirectory", "POST", "/", r)
proc createMicrosoftAD*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateMicrosoftAD", "POST", "/", r)
proc createSnapshot*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateSnapshot", "POST", "/", r)
proc createTrust*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateTrust", "POST", "/", r)
proc deleteConditionalForwarder*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteConditionalForwarder", "POST", "/", r)
proc deleteDirectory*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteDirectory", "POST", "/", r)
proc deleteSnapshot*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteSnapshot", "POST", "/", r)
proc deleteTrust*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteTrust", "POST", "/", r)
proc deregisterEventTopic*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeregisterEventTopic", "POST", "/", r)
proc describeConditionalForwarders*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeConditionalForwarders", "POST", "/", r)
proc describeDirectories*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeDirectories", "POST", "/", r)
proc describeDomainControllers*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeDomainControllers", "POST", "/", r)
proc describeEventTopics*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEventTopics", "POST", "/", r)
proc describeSnapshots*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeSnapshots", "POST", "/", r)
proc describeTrusts*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeTrusts", "POST", "/", r)
proc disableRadius*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DisableRadius", "POST", "/", r)
proc disableSso*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DisableSso", "POST", "/", r)
proc enableRadius*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "EnableRadius", "POST", "/", r)
proc enableSso*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "EnableSso", "POST", "/", r)
proc getDirectoryLimits*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetDirectoryLimits", "POST", "/", r)
proc getSnapshotLimits*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetSnapshotLimits", "POST", "/", r)
proc listIpRoutes*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListIpRoutes", "POST", "/", r)
proc listSchemaExtensions*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListSchemaExtensions", "POST", "/", r)
proc listTagsForResource*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTagsForResource", "POST", "/", r)
proc registerEventTopic*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RegisterEventTopic", "POST", "/", r)
proc removeIpRoutes*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RemoveIpRoutes", "POST", "/", r)
proc removeTagsFromResource*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RemoveTagsFromResource", "POST", "/", r)
proc restoreFromSnapshot*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RestoreFromSnapshot", "POST", "/", r)
proc startSchemaExtension*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartSchemaExtension", "POST", "/", r)
proc updateConditionalForwarder*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateConditionalForwarder", "POST", "/", r)
proc updateNumberOfDomainControllers*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateNumberOfDomainControllers", "POST", "/", r)
proc updateRadius*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateRadius", "POST", "/", r)
proc verifyTrust*(cl: DS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "VerifyTrust", "POST", "/", r)
