# This file is autogenerated, do not modify
import json, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2014-11-13"
const awsApiMD_endpointPrefix* = "ecs"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceAbbreviation* = "Amazon ECS"
const awsApiMD_serviceFullName* = "Amazon EC2 Container Service"
const awsApiMD_serviceId* = "ECS"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "AmazonEC2ContainerServiceV20141113"
const awsApiMD_uid* = "ecs-2014-11-13"
defineClient(ECS)
proc createCluster*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateCluster", "POST", "/", r)
proc createService*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateService", "POST", "/", r)
proc deleteAttributes*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteAttributes", "POST", "/", r)
proc deleteCluster*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteCluster", "POST", "/", r)
proc deleteService*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteService", "POST", "/", r)
proc deregisterContainerInstance*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeregisterContainerInstance", "POST", "/", r)
proc deregisterTaskDefinition*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeregisterTaskDefinition", "POST", "/", r)
proc describeClusters*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeClusters", "POST", "/", r)
proc describeContainerInstances*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeContainerInstances", "POST", "/", r)
proc describeServices*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeServices", "POST", "/", r)
proc describeTaskDefinition*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeTaskDefinition", "POST", "/", r)
proc describeTasks*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeTasks", "POST", "/", r)
proc discoverPollEndpoint*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DiscoverPollEndpoint", "POST", "/", r)
proc listAttributes*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListAttributes", "POST", "/", r)
proc listClusters*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListClusters", "POST", "/", r)
proc listContainerInstances*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListContainerInstances", "POST", "/", r)
proc listServices*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListServices", "POST", "/", r)
proc listTaskDefinitionFamilies*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTaskDefinitionFamilies", "POST", "/", r)
proc listTaskDefinitions*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTaskDefinitions", "POST", "/", r)
proc listTasks*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTasks", "POST", "/", r)
proc putAttributes*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutAttributes", "POST", "/", r)
proc registerContainerInstance*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RegisterContainerInstance", "POST", "/", r)
proc registerTaskDefinition*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RegisterTaskDefinition", "POST", "/", r)
proc runTask*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RunTask", "POST", "/", r)
proc startTask*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartTask", "POST", "/", r)
proc stopTask*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StopTask", "POST", "/", r)
proc submitContainerStateChange*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "SubmitContainerStateChange", "POST", "/", r)
proc submitTaskStateChange*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "SubmitTaskStateChange", "POST", "/", r)
proc updateContainerAgent*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateContainerAgent", "POST", "/", r)
proc updateContainerInstancesState*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateContainerInstancesState", "POST", "/", r)
proc updateService*(cl: ECS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdateService", "POST", "/", r)
