# This file is autogenerated, do not modify
import json, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2015-07-09"
const awsApiMD_endpointPrefix* = "codepipeline"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceAbbreviation* = "CodePipeline"
const awsApiMD_serviceFullName* = "AWS CodePipeline"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "CodePipeline_20150709"
const awsApiMD_uid* = "codepipeline-2015-07-09"
defineClient(CodePipeline)
proc acknowledgeJob*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AcknowledgeJob", "POST", "/", r)
proc acknowledgeThirdPartyJob*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AcknowledgeThirdPartyJob", "POST", "/", r)
proc createCustomActionType*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateCustomActionType", "POST", "/", r)
proc createPipeline*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreatePipeline", "POST", "/", r)
proc deleteCustomActionType*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteCustomActionType", "POST", "/", r)
proc deletePipeline*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeletePipeline", "POST", "/", r)
proc disableStageTransition*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DisableStageTransition", "POST", "/", r)
proc enableStageTransition*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "EnableStageTransition", "POST", "/", r)
proc getJobDetails*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetJobDetails", "POST", "/", r)
proc getPipeline*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetPipeline", "POST", "/", r)
proc getPipelineExecution*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetPipelineExecution", "POST", "/", r)
proc getPipelineState*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetPipelineState", "POST", "/", r)
proc getThirdPartyJobDetails*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetThirdPartyJobDetails", "POST", "/", r)
proc listActionTypes*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListActionTypes", "POST", "/", r)
proc listPipelineExecutions*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListPipelineExecutions", "POST", "/", r)
proc listPipelines*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListPipelines", "POST", "/", r)
proc pollForJobs*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PollForJobs", "POST", "/", r)
proc pollForThirdPartyJobs*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PollForThirdPartyJobs", "POST", "/", r)
proc putActionRevision*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutActionRevision", "POST", "/", r)
proc putApprovalResult*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutApprovalResult", "POST", "/", r)
proc putJobFailureResult*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutJobFailureResult", "POST", "/", r)
proc putJobSuccessResult*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutJobSuccessResult", "POST", "/", r)
proc putThirdPartyJobFailureResult*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutThirdPartyJobFailureResult", "POST", "/", r)
proc putThirdPartyJobSuccessResult*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutThirdPartyJobSuccessResult", "POST", "/", r)
proc retryStageExecution*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RetryStageExecution", "POST", "/", r)
proc startPipelineExecution*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartPipelineExecution", "POST", "/", r)
proc updatePipeline*(cl: CodePipeline, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UpdatePipeline", "POST", "/", r)
