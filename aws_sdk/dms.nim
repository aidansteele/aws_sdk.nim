# This file is autogenerated, do not modify
import json, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2016-01-01"
const awsApiMD_endpointPrefix* = "dms"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceFullName* = "AWS Database Migration Service"
const awsApiMD_serviceId* = "Database Migration Service"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "AmazonDMSv20160101"
const awsApiMD_uid* = "dms-2016-01-01"
defineClient(DMS)
proc addTagsToResource*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AddTagsToResource", "POST", "/", r)
proc createEndpoint*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateEndpoint", "POST", "/", r)
proc createEventSubscription*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateEventSubscription", "POST", "/", r)
proc createReplicationInstance*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateReplicationInstance", "POST", "/", r)
proc createReplicationSubnetGroup*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateReplicationSubnetGroup", "POST", "/", r)
proc createReplicationTask*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateReplicationTask", "POST", "/", r)
proc deleteCertificate*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteCertificate", "POST", "/", r)
proc deleteEndpoint*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteEndpoint", "POST", "/", r)
proc deleteEventSubscription*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteEventSubscription", "POST", "/", r)
proc deleteReplicationInstance*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteReplicationInstance", "POST", "/", r)
proc deleteReplicationSubnetGroup*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteReplicationSubnetGroup", "POST", "/", r)
proc deleteReplicationTask*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteReplicationTask", "POST", "/", r)
proc describeAccountAttributes*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeAccountAttributes", "POST", "/", r)
proc describeCertificates*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeCertificates", "POST", "/", r)
proc describeConnections*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeConnections", "POST", "/", r)
proc describeEndpointTypes*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEndpointTypes", "POST", "/", r)
proc describeEndpoints*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEndpoints", "POST", "/", r)
proc describeEventCategories*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEventCategories", "POST", "/", r)
proc describeEventSubscriptions*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEventSubscriptions", "POST", "/", r)
proc describeEvents*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeEvents", "POST", "/", r)
proc describeOrderableReplicationInstances*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeOrderableReplicationInstances", "POST", "/", r)
proc describeRefreshSchemasStatus*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeRefreshSchemasStatus", "POST", "/", r)
proc describeReplicationInstances*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeReplicationInstances", "POST", "/", r)
proc describeReplicationSubnetGroups*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeReplicationSubnetGroups", "POST", "/", r)
proc describeReplicationTaskAssessmentResults*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeReplicationTaskAssessmentResults", "POST", "/", r)
proc describeReplicationTasks*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeReplicationTasks", "POST", "/", r)
proc describeSchemas*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeSchemas", "POST", "/", r)
proc describeTableStatistics*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeTableStatistics", "POST", "/", r)
proc importCertificate*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ImportCertificate", "POST", "/", r)
proc listTagsForResource*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTagsForResource", "POST", "/", r)
proc modifyEndpoint*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ModifyEndpoint", "POST", "/", r)
proc modifyEventSubscription*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ModifyEventSubscription", "POST", "/", r)
proc modifyReplicationInstance*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ModifyReplicationInstance", "POST", "/", r)
proc modifyReplicationSubnetGroup*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ModifyReplicationSubnetGroup", "POST", "/", r)
proc modifyReplicationTask*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ModifyReplicationTask", "POST", "/", r)
proc refreshSchemas*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RefreshSchemas", "POST", "/", r)
proc reloadTables*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ReloadTables", "POST", "/", r)
proc removeTagsFromResource*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "RemoveTagsFromResource", "POST", "/", r)
proc startReplicationTask*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartReplicationTask", "POST", "/", r)
proc startReplicationTaskAssessment*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StartReplicationTaskAssessment", "POST", "/", r)
proc stopReplicationTask*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "StopReplicationTask", "POST", "/", r)
proc testConnection*(cl: DMS, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "TestConnection", "POST", "/", r)
