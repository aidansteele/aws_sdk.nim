# This file is autogenerated, do not modify
import json, asyncfutures
import utils/client
export client.new
const awsApiMD_apiVersion* = "2014-03-28"
const awsApiMD_endpointPrefix* = "logs"
const awsApiMD_jsonVersion* = "1.1"
const awsApiMD_protocol* = "json"
const awsApiMD_serviceFullName* = "Amazon CloudWatch Logs"
const awsApiMD_signatureVersion* = "v4"
const awsApiMD_targetPrefix* = "Logs_20140328"
const awsApiMD_uid* = "logs-2014-03-28"
defineClient(Logs)
proc associateKmsKey*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "AssociateKmsKey", "POST", "/", r)
proc cancelExportTask*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CancelExportTask", "POST", "/", r)
proc createExportTask*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateExportTask", "POST", "/", r)
proc createLogGroup*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateLogGroup", "POST", "/", r)
proc createLogStream*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "CreateLogStream", "POST", "/", r)
proc deleteDestination*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteDestination", "POST", "/", r)
proc deleteLogGroup*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteLogGroup", "POST", "/", r)
proc deleteLogStream*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteLogStream", "POST", "/", r)
proc deleteMetricFilter*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteMetricFilter", "POST", "/", r)
proc deleteResourcePolicy*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteResourcePolicy", "POST", "/", r)
proc deleteRetentionPolicy*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteRetentionPolicy", "POST", "/", r)
proc deleteSubscriptionFilter*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DeleteSubscriptionFilter", "POST", "/", r)
proc describeDestinations*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeDestinations", "POST", "/", r)
proc describeExportTasks*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeExportTasks", "POST", "/", r)
proc describeLogGroups*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeLogGroups", "POST", "/", r)
proc describeLogStreams*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeLogStreams", "POST", "/", r)
proc describeMetricFilters*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeMetricFilters", "POST", "/", r)
proc describeResourcePolicies*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeResourcePolicies", "POST", "/", r)
proc describeSubscriptionFilters*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DescribeSubscriptionFilters", "POST", "/", r)
proc disassociateKmsKey*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "DisassociateKmsKey", "POST", "/", r)
proc filterLogEvents*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "FilterLogEvents", "POST", "/", r)
proc getLogEvents*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "GetLogEvents", "POST", "/", r)
proc listTagsLogGroup*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "ListTagsLogGroup", "POST", "/", r)
proc putDestination*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutDestination", "POST", "/", r)
proc putDestinationPolicy*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutDestinationPolicy", "POST", "/", r)
proc putLogEvents*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutLogEvents", "POST", "/", r)
proc putMetricFilter*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutMetricFilter", "POST", "/", r)
proc putResourcePolicy*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutResourcePolicy", "POST", "/", r)
proc putRetentionPolicy*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutRetentionPolicy", "POST", "/", r)
proc putSubscriptionFilter*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "PutSubscriptionFilter", "POST", "/", r)
proc tagLogGroup*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "TagLogGroup", "POST", "/", r)
proc testMetricFilter*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "TestMetricFilter", "POST", "/", r)
proc untagLogGroup*(cl: Logs, r: JsonNode): Future[JsonNode] = sendJsonRequest(cl, "UntagLogGroup", "POST", "/", r)
